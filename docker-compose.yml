version: '3.8'

services:
  # MySQL Master
  mysql-master:
    image: mysql:8.0
    container_name: mysql-master
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: testdb
      MYSQL_USER: appuser
      MYSQL_PASSWORD: apppass
    ports:
      - "3307:3306"
    volumes:
      - ./mysql-config/master.cnf:/etc/mysql/conf.d/master.cnf
      - ./init-scripts/master-init.sql:/docker-entrypoint-initdb.d/master-init.sql
      - master_data:/var/lib/mysql
    networks:
      - mysql-network
    command: --server-id=1 --log-bin=mysql-bin --gtid-mode=ON --enforce-gtid-consistency=ON

  # MySQL Slave 1
  mysql-slave1:
    image: mysql:8.0
    container_name: mysql-slave1
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: testdb
      MYSQL_USER: appuser
      MYSQL_PASSWORD: apppass
    ports:
      - "3308:3306"
    volumes:
      - ./mysql-config/slave.cnf:/etc/mysql/conf.d/slave.cnf
      - ./init-scripts/slave-init.sql:/docker-entrypoint-initdb.d/slave-init.sql
      - slave1_data:/var/lib/mysql
    networks:
      - mysql-network
    depends_on:
      - mysql-master
    command: --server-id=2 --log-bin=mysql-bin --gtid-mode=ON --enforce-gtid-consistency=ON --read-only=1

  # MySQL Slave 2
  mysql-slave2:
    image: mysql:8.0
    container_name: mysql-slave2
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: testdb
      MYSQL_USER: appuser
      MYSQL_PASSWORD: apppass
    ports:
      - "3309:3306"
    volumes:
      - ./mysql-config/slave.cnf:/etc/mysql/conf.d/slave.cnf
      - ./init-scripts/slave-init.sql:/docker-entrypoint-initdb.d/slave-init.sql
      - slave2_data:/var/lib/mysql
    networks:
      - mysql-network
    depends_on:
      - mysql-master
    command: --server-id=3 --log-bin=mysql-bin --gtid-mode=ON --enforce-gtid-consistency=ON --read-only=1

  # ProxySQL
  proxysql:
    image: proxysql/proxysql:2.5.5
    container_name: proxysql
    ports:
      - "6032:6032"  # Admin interface
      - "6033:6033"  # MySQL interface
    volumes:
      - ./proxysql-config/proxysql.cnf:/etc/proxysql.cnf
    networks:
      - mysql-network
    depends_on:
      - mysql-master
      - mysql-slave1
      - mysql-slave2

  # FastAPI Application
  fastapi-app:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: fastapi-app
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=mysql://appuser:apppass@proxysql:6033/testdb
    networks:
      - mysql-network
    depends_on:
      - proxysql
    volumes:
      - ./app:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

volumes:
  master_data:
  slave1_data:
  slave2_data:

networks:
  mysql-network:
    driver: bridge